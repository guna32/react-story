{"ast":null,"code":"var _jsxFileName = \"/Users/prasadhegde/Dev/react-story/src/components/countBanner/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./style.css\";\n\nconst atLimit = (limit, current) => {\n  return current < limit ? current : limit;\n};\n\nconst CountBanner = ({\n  count,\n  limit\n}) => {\n  const colors = [\"#ff0000\", \"#ffa500\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#ee82ee\"];\n  let countArray = new Array(atLimit(limit, count)).fill(0);\n  return React.createElement(\"div\", {\n    className: \"countFlex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flexTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Click Me\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, count), React.createElement(\"div\", {\n    className: \"blockWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, countArray.map((c, i) => React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    key: i,\n    className: \"tinyBlock\",\n    style: {\n      background: colors[i % colors.length]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))))));\n};\n\nexport default CountBanner;\nCountBanner.propTypes = {\n  count: PropTypes.number\n};\nCountBanner.defaultProps = {\n  count: 0\n};","map":{"version":3,"sources":["/Users/prasadhegde/Dev/react-story/src/components/countBanner/index.js"],"names":["React","PropTypes","atLimit","limit","current","CountBanner","count","colors","countArray","Array","fill","display","flexWrap","map","c","i","background","length","propTypes","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAClC,SAAOA,OAAO,GAAGD,KAAV,GAAkBC,OAAlB,GAA4BD,KAAnC;AACD,CAFD;;AAIA,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASH,EAAAA;AAAT,CAAD,KAAsB;AACxC,QAAMI,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,CAAf;AASA,MAAIC,UAAU,GAAG,IAAIC,KAAJ,CAAUP,OAAO,CAACC,KAAD,EAAQG,KAAR,CAAjB,EAAiCI,IAAjC,CAAsC,CAAtC,CAAjB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,CAACK,GAAX,CAAe,CAACC,CAAD,EAAIC,CAAJ,KACd,0CACE;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAET,MAAM,CAACQ,CAAC,GAAGR,MAAM,CAACU,MAAZ;AAApB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF,CAHF,CADF;AAmBD,CA9BD;;AA+BA,eAAeZ,WAAf;AAEAA,WAAW,CAACa,SAAZ,GAAwB;AACtBZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB;AADK,CAAxB;AAIAd,WAAW,CAACe,YAAZ,GAA2B;AACzBd,EAAAA,KAAK,EAAE;AADkB,CAA3B","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./style.css\";\n\nconst atLimit = (limit, current) => {\n  return current < limit ? current : limit;\n};\n\nconst CountBanner = ({ count, limit }) => {\n  const colors = [\n    \"#ff0000\",\n    \"#ffa500\",\n    \"#ffff00\",\n    \"#008000\",\n    \"#0000ff\",\n    \"#4b0082\",\n    \"#ee82ee\"\n  ];\n  let countArray = new Array(atLimit(limit, count)).fill(0);\n  return (\n    <div className=\"countFlex\">\n      <div className=\"flexTitle\">Click Me</div>\n      <h1>{count}</h1>\n      <div className=\"blockWrap\">\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {countArray.map((c, i) => (\n            <>\n              <div\n                key={i}\n                className=\"tinyBlock\"\n                style={{ background: colors[i % colors.length] }}\n              ></div>\n            </>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CountBanner;\n\nCountBanner.propTypes = {\n  count: PropTypes.number\n};\n\nCountBanner.defaultProps = {\n  count: 0\n};\n"]},"metadata":{},"sourceType":"module"}